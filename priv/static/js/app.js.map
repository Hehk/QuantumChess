{"version":3,"sources":["node_modules/phoenix/priv/static/phoenix.js","node_modules/phoenix_html/priv/static/phoenix_html.js","app.js","board.js","pop_ups.js","user.js","utils.js","socket.js"],"names":[],"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","file":"priv/static/js/app.js","sourcesContent":["require.register('phoenix', function(exports,req,module){\n    var require = __makeRequire((function(n) { return req(n.replace('./', 'phoenix/')); }), {});\n    (function(exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are mulitplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket(\"/ws\", {params: {userToken: \"123\"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here's an example chat room example where `\"new_msg\"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel(\"rooms:123\", {token: roomToken})\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n//     $input.onEnter( e => {\n//       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n//        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n//     })\n//     channel.join()\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n//       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n//\n//\n// ## Joining\n//\n// Creating a channel with `socket.channel(topic, params)`, binds the params to\n// `channel.params`, which are sent up on `channel.join()`.\n// Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an \"ok\" status, while unsuccessful joins\n// receive \"error\".\n//\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting. The default timeout is 5000ms.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\n//     socket.onClose( () => console.log(\"the connection dropped\") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log(\"there was an error!\") )\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attemtped\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n\nvar VSN = \"1.0.0\";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 10000;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\n\nvar Push = function () {\n\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `\"phx_join\"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n\n  function Push(channel, event, payload, timeout) {\n    _classCallCheck(this, Push);\n\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || {};\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n\n  _createClass(Push, [{\n    key: \"resend\",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n      this.cancelRefEvent();\n      this.ref = null;\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n      this.send();\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      if (this.hasReceived(\"timeout\")) {\n        return;\n      }\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref\n      });\n    }\n  }, {\n    key: \"receive\",\n    value: function receive(status, callback) {\n      if (this.hasReceived(status)) {\n        callback(this.receivedResp.response);\n      }\n\n      this.recHooks.push({ status: status, callback: callback });\n      return this;\n    }\n\n    // private\n\n  }, {\n    key: \"matchReceive\",\n    value: function matchReceive(_ref) {\n      var status = _ref.status;\n      var response = _ref.response;\n      var ref = _ref.ref;\n\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: \"cancelRefEvent\",\n    value: function cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: \"cancelTimeout\",\n    value: function cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n  }, {\n    key: \"startTimeout\",\n    value: function startTimeout() {\n      var _this = this;\n\n      if (this.timeoutTimer) {\n        return;\n      }\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n\n      this.channel.on(this.refEvent, function (payload) {\n        _this.cancelRefEvent();\n        _this.cancelTimeout();\n        _this.receivedResp = payload;\n        _this.matchReceive(payload);\n      });\n\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger(\"timeout\", {});\n      }, this.timeout);\n    }\n  }, {\n    key: \"hasReceived\",\n    value: function hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(status, response) {\n      this.channel.trigger(this.refEvent, { status: status, response: response });\n    }\n  }]);\n\n  return Push;\n}();\n\nvar Channel = exports.Channel = function () {\n  function Channel(topic, params, socket) {\n    var _this2 = this;\n\n    _classCallCheck(this, Channel);\n\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = params || {};\n    this.socket = socket;\n    this.bindings = [];\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.rejoinTimer = new Timer(function () {\n      return _this2.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive(\"ok\", function () {\n      _this2.state = CHANNEL_STATES.joined;\n      _this2.rejoinTimer.reset();\n      _this2.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n      _this2.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this2.socket.log(\"channel\", \"close \" + _this2.topic);\n      _this2.state = CHANNEL_STATES.closed;\n      _this2.socket.remove(_this2);\n    });\n    this.onError(function (reason) {\n      _this2.socket.log(\"channel\", \"error \" + _this2.topic, reason);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive(\"timeout\", function () {\n      if (_this2.state !== CHANNEL_STATES.joining) {\n        return;\n      }\n\n      _this2.socket.log(\"channel\", \"timeout \" + _this2.topic, _this2.joinPush.timeout);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this2.trigger(_this2.replyEventName(ref), payload);\n    });\n  }\n\n  _createClass(Channel, [{\n    key: \"rejoinUntilConnected\",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: \"join\",\n    value: function join() {\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n      if (this.joinedOnce) {\n        throw \"tried to join multiple times. 'join' can only be called a single time per channel instance\";\n      } else {\n        this.joinedOnce = true;\n      }\n      this.rejoin(timeout);\n      return this.joinPush;\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.bindings.push({ event: event, callback: callback });\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: \"canPush\",\n    value: function canPush() {\n      return this.socket.isConnected() && this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: \"push\",\n    value: function push(event, payload) {\n      var timeout = arguments.length <= 2 || arguments[2] === undefined ? this.timeout : arguments[2];\n\n      if (!this.joinedOnce) {\n        throw \"tried to push '\" + event + \"' to '\" + this.topic + \"' before joining. Use channel.join() before pushing events\";\n      }\n      var pushEvent = new Push(this, event, payload, timeout);\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n\n      return pushEvent;\n    }\n\n    // Leaves the channel\n    //\n    // Unsubscribes from server events, and\n    // instructs channel to terminate on server\n    //\n    // Triggers onClose() hooks\n    //\n    // To receive leave acknowledgements, use the a `receive`\n    // hook to bind to the server ack, ie:\n    //\n    //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n    //\n\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      var _this3 = this;\n\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n\n      var onClose = function onClose() {\n        _this3.socket.log(\"channel\", \"leave \" + _this3.topic);\n        _this3.trigger(CHANNEL_EVENTS.close, \"leave\");\n      };\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive(\"ok\", function () {\n        return onClose();\n      }).receive(\"timeout\", function () {\n        return onClose();\n      });\n      leavePush.send();\n      if (!this.canPush()) {\n        leavePush.trigger(\"ok\", {});\n      }\n\n      return leavePush;\n    }\n\n    // Overridable message hook\n    //\n    // Receives all events for specialized message handling\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event, payload, ref) {}\n\n    // private\n\n  }, {\n    key: \"isMember\",\n    value: function isMember(topic) {\n      return this.topic === topic;\n    }\n  }, {\n    key: \"sendJoin\",\n    value: function sendJoin(timeout) {\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: \"rejoin\",\n    value: function rejoin() {\n      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];\n      this.sendJoin(timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(triggerEvent, payload, ref) {\n      this.onMessage(triggerEvent, payload, ref);\n      this.bindings.filter(function (bind) {\n        return bind.event === triggerEvent;\n      }).map(function (bind) {\n        return bind.callback(payload, ref);\n      });\n    }\n  }, {\n    key: \"replyEventName\",\n    value: function replyEventName(ref) {\n      return \"chan_reply_\" + ref;\n    }\n  }]);\n\n  return Channel;\n}();\n\nvar Socket = exports.Socket = function () {\n\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\n  //                                               \"wss://example.com\"\n  //                                               \"/ws\" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n\n  function Socket(endPoint) {\n    var _this4 = this;\n\n    var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, Socket);\n\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || window.WebSocket || LongPoll;\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.logger = opts.logger || function () {}; // noop\n    this.longpollerTimeout = opts.longpollerTimeout || 20000;\n    this.params = opts.params || {};\n    this.endPoint = endPoint + \"/\" + TRANSPORTS.websocket;\n    this.reconnectTimer = new Timer(function () {\n      _this4.disconnect(function () {\n        return _this4.connect();\n      });\n    }, this.reconnectAfterMs);\n  }\n\n  _createClass(Socket, [{\n    key: \"protocol\",\n    value: function protocol() {\n      return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n    }\n  }, {\n    key: \"endPointURL\",\n    value: function endPointURL() {\n      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });\n      if (uri.charAt(0) !== \"/\") {\n        return uri;\n      }\n      if (uri.charAt(1) === \"/\") {\n        return this.protocol() + \":\" + uri;\n      }\n\n      return this.protocol() + \"://\" + location.host + uri;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(callback, code, reason) {\n      if (this.conn) {\n        this.conn.onclose = function () {}; // noop\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n        this.conn = null;\n      }\n      callback && callback();\n    }\n\n    // params - The params to send when connecting, for example `{user_id: userToken}`\n\n  }, {\n    key: \"connect\",\n    value: function connect(params) {\n      var _this5 = this;\n\n      if (params) {\n        console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n        this.params = params;\n      }\n      if (this.conn) {\n        return;\n      }\n\n      this.conn = new this.transport(this.endPointURL());\n      this.conn.timeout = this.longpollerTimeout;\n      this.conn.onopen = function () {\n        return _this5.onConnOpen();\n      };\n      this.conn.onerror = function (error) {\n        return _this5.onConnError(error);\n      };\n      this.conn.onmessage = function (event) {\n        return _this5.onConnMessage(event);\n      };\n      this.conn.onclose = function (event) {\n        return _this5.onConnClose(event);\n      };\n    }\n\n    // Logs the message. Override `this.logger` for specialized logging. noops by default\n\n  }, {\n    key: \"log\",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n\n    // Registers callbacks for connection state change events\n    //\n    // Examples\n    //\n    //    socket.onError(function(error){ alert(\"An error occurred\") })\n    //\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n  }, {\n    key: \"onConnOpen\",\n    value: function onConnOpen() {\n      var _this6 = this;\n\n      this.log(\"transport\", \"connected to \" + this.endPointURL(), this.transport.prototype);\n      this.flushSendBuffer();\n      this.reconnectTimer.reset();\n      if (!this.conn.skipHeartbeat) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(function () {\n          return _this6.sendHeartbeat();\n        }, this.heartbeatIntervalMs);\n      }\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"onConnClose\",\n    value: function onConnClose(event) {\n      this.log(\"transport\", \"close\", event);\n      this.triggerChanError();\n      clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: \"onConnError\",\n    value: function onConnError(error) {\n      this.log(\"transport\", error);\n      this.triggerChanError();\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: \"triggerChanError\",\n    value: function triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: \"connectionState\",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return \"connecting\";\n        case SOCKET_STATES.open:\n          return \"open\";\n        case SOCKET_STATES.closing:\n          return \"closing\";\n        default:\n          return \"closed\";\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this.connectionState() === \"open\";\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return !c.isMember(channel.topic);\n      });\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(topic) {\n      var chanParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var chan = new Channel(topic, chanParams, this);\n      this.channels.push(chan);\n      return chan;\n    }\n  }, {\n    key: \"push\",\n    value: function push(data) {\n      var _this7 = this;\n\n      var topic = data.topic;\n      var event = data.event;\n      var payload = data.payload;\n      var ref = data.ref;\n\n      var callback = function callback() {\n        return _this7.conn.send(JSON.stringify(data));\n      };\n      this.log(\"push\", topic + \" \" + event + \" (\" + ref + \")\", payload);\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n\n    // Return the next message ref, accounting for overflows\n\n  }, {\n    key: \"makeRef\",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n\n      return this.ref.toString();\n    }\n  }, {\n    key: \"sendHeartbeat\",\n    value: function sendHeartbeat() {\n      if (!this.isConnected()) {\n        return;\n      }\n      this.push({ topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.makeRef() });\n    }\n  }, {\n    key: \"flushSendBuffer\",\n    value: function flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: \"onConnMessage\",\n    value: function onConnMessage(rawMessage) {\n      var msg = JSON.parse(rawMessage.data);\n      var topic = msg.topic;\n      var event = msg.event;\n      var payload = msg.payload;\n      var ref = msg.ref;\n\n      this.log(\"receive\", (payload.status || \"\") + \" \" + topic + \" \" + event + \" \" + (ref && \"(\" + ref + \")\" || \"\"), payload);\n      this.channels.filter(function (channel) {\n        return channel.isMember(topic);\n      }).forEach(function (channel) {\n        return channel.trigger(event, payload, ref);\n      });\n      this.stateChangeCallbacks.message.forEach(function (callback) {\n        return callback(msg);\n      });\n    }\n  }]);\n\n  return Socket;\n}();\n\nvar LongPoll = exports.LongPoll = function () {\n  function LongPoll(endPoint) {\n    _classCallCheck(this, LongPoll);\n\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function () {}; // noop\n    this.onerror = function () {}; // noop\n    this.onmessage = function () {}; // noop\n    this.onclose = function () {}; // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n\n    this.poll();\n  }\n\n  _createClass(LongPoll, [{\n    key: \"normalizeEndpoint\",\n    value: function normalizeEndpoint(endPoint) {\n      return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n    }\n  }, {\n    key: \"endpointURL\",\n    value: function endpointURL() {\n      return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n    }\n  }, {\n    key: \"closeAndRetry\",\n    value: function closeAndRetry() {\n      this.close();\n      this.readyState = SOCKET_STATES.connecting;\n    }\n  }, {\n    key: \"ontimeout\",\n    value: function ontimeout() {\n      this.onerror(\"timeout\");\n      this.closeAndRetry();\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      var _this8 = this;\n\n      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n        return;\n      }\n\n      Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n        if (resp) {\n          var status = resp.status;\n          var token = resp.token;\n          var messages = resp.messages;\n\n          _this8.token = token;\n        } else {\n          var status = 0;\n        }\n\n        switch (status) {\n          case 200:\n            messages.forEach(function (msg) {\n              return _this8.onmessage({ data: JSON.stringify(msg) });\n            });\n            _this8.poll();\n            break;\n          case 204:\n            _this8.poll();\n            break;\n          case 410:\n            _this8.readyState = SOCKET_STATES.open;\n            _this8.onopen();\n            _this8.poll();\n            break;\n          case 0:\n          case 500:\n            _this8.onerror();\n            _this8.closeAndRetry();\n            break;\n          default:\n            throw \"unhandled poll status \" + status;\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(body) {\n      var _this9 = this;\n\n      Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), function (resp) {\n        if (!resp || resp.status !== 200) {\n          _this9.onerror(status);\n          _this9.closeAndRetry();\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.readyState = SOCKET_STATES.closed;\n      this.onclose();\n    }\n  }]);\n\n  return LongPoll;\n}();\n\nvar Ajax = exports.Ajax = function () {\n  function Ajax() {\n    _classCallCheck(this, Ajax);\n  }\n\n  _createClass(Ajax, null, [{\n    key: \"request\",\n    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n      if (window.XDomainRequest) {\n        var req = new XDomainRequest(); // IE8, IE9\n        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n      } else {\n        var req = window.XMLHttpRequest ? new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n        new ActiveXObject(\"Microsoft.XMLHTTP\"); // IE6, IE5\n        this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback);\n      }\n    }\n  }, {\n    key: \"xdomainRequest\",\n    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n      var _this10 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint);\n      req.onload = function () {\n        var response = _this10.parseJSON(req.responseText);\n        callback && callback(response);\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      // Work around bug in IE9 that requires an attached onprogress handler\n      req.onprogress = function () {};\n\n      req.send(body);\n    }\n  }, {\n    key: \"xhrRequest\",\n    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n      var _this11 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint, true);\n      req.setRequestHeader(\"Content-Type\", accept);\n      req.onerror = function () {\n        callback && callback(null);\n      };\n      req.onreadystatechange = function () {\n        if (req.readyState === _this11.states.complete && callback) {\n          var response = _this11.parseJSON(req.responseText);\n          callback(response);\n        }\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      req.send(body);\n    }\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(resp) {\n      return resp && resp !== \"\" ? JSON.parse(resp) : null;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(obj, parentKey) {\n      var queryStr = [];\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        var paramKey = parentKey ? parentKey + \"[\" + key + \"]\" : key;\n        var paramVal = obj[key];\n        if ((typeof paramVal === \"undefined\" ? \"undefined\" : _typeof(paramVal)) === \"object\") {\n          queryStr.push(this.serialize(paramVal, paramKey));\n        } else {\n          queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n        }\n      }\n      return queryStr.join(\"&\");\n    }\n  }, {\n    key: \"appendParams\",\n    value: function appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n\n      var prefix = url.match(/\\?/) ? \"&\" : \"?\";\n      return \"\" + url + prefix + this.serialize(params);\n    }\n  }]);\n\n  return Ajax;\n}();\n\nAjax.states = { complete: 4 };\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//    reconnectTimer.scheduleTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//\n\nvar Timer = function () {\n  function Timer(callback, timerCalc) {\n    _classCallCheck(this, Timer);\n\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n\n  _createClass(Timer, [{\n    key: \"reset\",\n    value: function reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n    }\n\n    // Cancels any previous scheduleTimeout and schedules callback\n\n  }, {\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var _this12 = this;\n\n      clearTimeout(this.timer);\n\n      this.timer = setTimeout(function () {\n        _this12.tries = _this12.tries + 1;\n        _this12.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }]);\n\n  return Timer;\n}();\n\n\n})(typeof(exports) === \"undefined\" ? window.Phoenix = window.Phoenix || {} : exports);\n\n  });","require.register('phoenix_html', function(exports,req,module){\n    var require = __makeRequire((function(n) { return req(n.replace('./', 'phoenix_html/')); }), {});\n    'use strict';\n\n// Although ^=parent is not technically correct,\n// we need to use it in order to get IE8 support.\nvar elements = document.querySelectorAll('[data-submit^=parent]');\nvar len = elements.length;\n\nfor (var i = 0; i < len; ++i) {\n  elements[i].addEventListener('click', function (event) {\n    var message = this.getAttribute(\"data-confirm\");\n    if (message === null || confirm(message)) {\n      this.parentNode.submit();\n    };\n    event.preventDefault();\n    return false;\n  }, false);\n}\n\n;\n  });","// Brunch automatically concatenates all files in your\n// watched paths. Those paths can be configured at\n// config.paths.watched in \"brunch-config.js\".\n//\n// However, those files will only be executed if\n// explicitly imported. The only exception are files\n// in vendor, which are never wrapped in imports and\n// therefore are always executed.\n\n// Import dependencies\n//\n// If you no longer want to use a dependency, remember\n// to also remove its path from \"config.paths.watched\".\nimport \"phoenix_html\";\n\n// Import local files\n//\n// Local files can be imported directly using relative\n// paths \"./socket\" or full ones \"web/static/js/socket\".\n\nimport socket from \"./socket\"\n\nimport Board from './components/board';\nimport User from './components/user';\n\nfunction initList(id) {\n  $('#' + id + '_search').on('click', event => {\n    event.target.classList.toggle('open');\n    $('#' + id + '_search_input').toggleClass('open').val(\"\");\n  });\n\n  $('#' + id + '_search_input').on('input', event => {\n    const filterTerm = event.target.value.trim();\n\n    $('#' + id + ' > .list-item').each((_index, elem) => {\n      const target = $(elem);\n      if (target.find('.title').text().toLowerCase().indexOf(filterTerm) != -1) {\n        target\n          .addClass('open')\n          .removeClass('close');\n      } else {\n        target\n          .addClass('close')\n          .removeClass('open');\n      }\n    });\n  });\n}\n\n//Board.init(socket, $('.player'));\nwindow.onload = () => {\n  if (window.userToken !== \"\") {\n    socket.connect();\n\n    const isGame = /(\\/game\\?=)(\\S*)/g.exec(document.location.href)\n    if (isGame !== null) {\n      Board.init(socket, isGame[2]);\n    }\n\n    initList('active_players');\n    initList('active_games');\n\n    User.init(socket);\n  }\n}\n","import Utils from './utils';\nimport PopUps from './pop_ups';\n\nconst board = (() => {\n  // private\n  let selectedPos = null;\n  let chessBoard = null;\n  let channel = null;\n\n  let boardPlayers = []\n\n  function _initTiles (tiles) {\n    // stores the values of all tiles on the board is a temporary solution to the user\n    // being able to simply recolor the pieces and move any they wish\n    let tileValues = tiles.map((index, elem) => {\n      return {\n        piece: elem.getAttribute('type'),\n        color: elem.getAttribute('color'),\n      }\n    });\n\n    let activePlayer = '';\n    let boardLocked = false;\n    let player1 = '';\n    let player2 = '';\n\n    /**\n     * Converts an index into an object with x and y cordinates of the element on the\n     * chessBoard. Makes for some of the validation math to be easier.\n     *\n     * @param  {Number} index :Number from 0-63\n     * @return {Object}       :Object with x and y params\n     */\n    function _getPosition (index) {\n      return {\n        y: Math.floor(index / 8),\n        x: index % 8\n      }\n    }\n\n    /**\n     * Validates a knight move\n     *\n     * @param  {Number} oldIndex :Number from 0-63\n     * @param  {Number} newIndex :Number from 0-63\n     * @return {Boolean}         :If move is valid\n     */\n    function _validateKnighMove (oldIndex, newIndex) {\n      const oldPos = _getPosition(oldIndex);\n      const newPos = _getPosition(newIndex);\n      const verMove = Math.abs(oldPos.y - newPos.y);\n      const horMove = Math.abs(oldPos.x - newPos.x);\n\n      return ( newIndex >= 0 && newIndex < 64 ) &&\n             (\n               ( horMove === 2 && verMove === 1 ) ||\n               ( horMove === 1 && verMove === 2 )\n             );\n    }\n\n    /**\n     * simulates a knight move and marks the end position if the move would be valid\n     *\n     * @param  {Number} index  :Number from 0-63\n     * @param  {String} color  :Color of the piece being moved\n     * @param  {Number} change :Delta of index in the move\n     * @return {Null}\n     */\n    function _moveKnightToBlock (index, color, change) {\n      const newIndex = index + change;\n\n      if (_validateKnighMove(index, newIndex)) {\n        _makeMove(newIndex, color);\n      }\n    }\n\n    /**\n     * Validates any linear move. Basically the way every piece except for knights move.\n     *\n     * @param  {Number}  oldIndex   :Start position of the piece\n     * @param  {Number}  newIndex   :End position of piece\n     * @param  {Boolean} horizontal :If the move is horizontal or not\n     * @return {Boolean}            :If the move is valid\n     */\n    function _validateLinearMove (oldIndex, newIndex, horizontal) {\n      const oldPos = _getPosition(oldIndex);\n      const newPos = _getPosition(newIndex);\n\n      return (\n        // within bounds of the board\n        ( newIndex >= 0 && newIndex < 64 ) &&\n        // did no skip to the other side of the board\n        (\n          (\n            ( horizontal === false ) &&\n            ( oldPos.y === newPos.y ) &&\n            ( Math.abs(oldPos.x - newPos.x) === Math.abs(8 - Math.abs(newIndex - oldIndex)) )\n          ) ||\n          (\n            ( horizontal === false ) &&\n            ( Math.abs(oldPos.y - newPos.y) < 2 ) &&\n            ( Math.abs(oldPos.y - newPos.y) > 0 )\n          ) ||\n          (\n            ( horizontal === true ) &&\n            ( oldPos.y === newPos.y )\n          ) ||\n          (\n            ( horizontal === true ) &&\n            ( oldPos.x === newPos.x )\n          )\n        )\n      )\n    }\n\n    /**\n     * Coats all the positions not considered valid with an invalid class\n     *\n     * @return {Null}\n     */\n    function _makeRestInvalid () {\n      tiles.each((_index, tile) => {\n        if ((tile.classList.contains('valid') || tile.classList.contains('active')) === false) {\n          tile.classList.add('invalid');\n        }\n      });\n    }\n\n    /**\n     * Removes all the classes used to classify positions for a piece move\n     *\n     * @return {Null}\n     */\n    function _clearBoard () {\n      selectedPos = null;\n      tiles.each((_index, tile) => {\n        tile.classList.remove('valid');\n        tile.classList.remove('invalid');\n        tile.classList.remove('active');\n      });\n    }\n\n    function _clearOppTarget () {\n      tiles.each((_index, tile) => {\n        tile.classList.remove('opp-active');\n      });\n    }\n\n    /**\n     * Coats the end position of a move with class depending if the position if empty\n     * or of the same color\n     *\n     * @param  {Number}    index      :Start position of the piece\n     * @param  {String}    color      :Color of the piece\n     * @param  {Number}    change     :Delta of index in move, for callback\n     * @param  {Boolean}   horizontal :If the move is horizontal, for callback\n     * @param  {Function}  callback   :Function called if the end position is empty\n     * @return {Null}\n     */\n    function _makeMove (index, color, change, horizontal, callback) {\n      const tile = tiles[index];\n\n      if (tile.getAttribute('type') === 'empty') {\n        tile.classList.add('valid');\n        if (typeof callback === 'function') {\n          callback(index, color, change, horizontal);\n        }\n      } else if (tile.getAttribute('color') !== color) {\n        tile.classList.add('valid');\n        tile.classList.add('target');\n      }\n    }\n\n    /**\n     * Move a piece linearly only a single block\n     *\n     * @param  {Number}    index      :Start position of the piece\n     * @param  {String}    color      :Color of the piece\n     * @param  {Number}    change     :Delta of index in move\n     * @param  {Boolean}   horizontal :If the move is horizontal\n     * @return {Null}\n     */\n    function _moveLinearlySingleBlock (index, color, change, horizontal) {\n      const newIndex = index + change;\n\n      if (_validateLinearMove(index, newIndex, horizontal)) {\n        _makeMove(newIndex, color);\n      }\n    }\n\n    /**\n     * Move a piece linearly until a barrier is hit\n     *\n     * @param  {Number}    index      :Start position of the piece\n     * @param  {String}    color      :Color of the piece\n     * @param  {Number}    change     :Delta of index in move\n     * @param  {Boolean}   horizontal :If the move is horizontal\n     * @return {Null}\n     */\n    function _moveLinearlyUntilBlocked (index, color, change, horizontal) {\n      const newIndex = index + change;\n\n      if (_validateLinearMove(index, newIndex, horizontal)) {\n        _makeMove(newIndex, color, change, horizontal, _moveLinearlyUntilBlocked)\n      }\n    }\n\n    /**\n     * Shows the possible moves of this rook\n     *\n     * @param  {Number} pos   :Position of the rook\n     * @param  {String} color :Color of the rook\n     * @return {Null}\n     */\n    function _rookClicked (pos, color) {\n      tiles[pos].classList.add('active');\n\n      // down\n      _moveLinearlyUntilBlocked(pos, color, 8, true);\n      // up\n      _moveLinearlyUntilBlocked(pos, color, -8, true);\n      // left\n      _moveLinearlyUntilBlocked(pos, color, 1, true);\n      // right\n      _moveLinearlyUntilBlocked(pos, color, -1, true);\n\n      // reds out the board\n      _makeRestInvalid();\n    }\n\n    /**\n     * Shows the possible moves of this bishop\n     *\n     * @param  {Number} pos   :Position of the bishop\n     * @param  {String} color :Color of the bishop\n     * @return {Null}\n     */\n    function _bishopClicked (pos, color) {\n      tiles[pos].classList.add('active');\n\n      // up left\n      _moveLinearlyUntilBlocked(pos, color, -9, false);\n      // up right\n      _moveLinearlyUntilBlocked(pos, color, -7, false);\n      // down left\n      _moveLinearlyUntilBlocked(pos, color, 7, false);\n      // down right\n      _moveLinearlyUntilBlocked(pos, color, 9, false);\n\n      // reds out the board\n      _makeRestInvalid();\n    }\n\n    /**\n     * Shows the possible moves of this queen\n     *\n     * @param  {Number} pos   :Position of the queen\n     * @param  {String} color :Color of the queen\n     * @return {Null}\n     */\n    function _queenClicked(pos, color) {\n      tiles[pos].classList.add('active');\n\n      // down\n      _moveLinearlyUntilBlocked(pos, color, 8, true);\n      // up\n      _moveLinearlyUntilBlocked(pos, color, -8, true);\n      // left\n      _moveLinearlyUntilBlocked(pos, color, 1, true);\n      // right\n      _moveLinearlyUntilBlocked(pos, color, -1, true);\n\n      // up left\n      _moveLinearlyUntilBlocked(pos, color, -9, false);\n      // up right\n      _moveLinearlyUntilBlocked(pos, color, -7, false);\n      // down left\n      _moveLinearlyUntilBlocked(pos, color, 7, false);\n      // down right\n      _moveLinearlyUntilBlocked(pos, color, 9, false);\n\n      // reds out the board\n      _makeRestInvalid();\n    }\n\n    /**\n     * Shows the possible moves of this king\n     *\n     * @param  {Number} pos   :Position of the king\n     * @param  {String} color :Color of the king\n     * @return {Null}\n     */\n    function _kingClicked(pos, color) {\n      tiles[pos].classList.add('active');\n\n      // down\n      _moveLinearlySingleBlock(pos, color, 8, true);\n      // up\n      _moveLinearlySingleBlock(pos, color, -8, true);\n      // left\n      _moveLinearlySingleBlock(pos, color, 1, true);\n      // right\n      _moveLinearlySingleBlock(pos, color, -1, true);\n\n      // up left\n      _moveLinearlySingleBlock(pos, color, -9, false);\n      // up right\n      _moveLinearlySingleBlock(pos, color, -7, false);\n      // down left\n      _moveLinearlySingleBlock(pos, color, 7, false);\n      // down right\n      _moveLinearlySingleBlock(pos, color, 9, false);\n\n      // reds out the board\n      _makeRestInvalid();\n    }\n\n    /**\n     * Shows the possible moves of this knight\n     *\n     * @param  {Number} pos   :Position of the knight\n     * @param  {String} color :Color of the knight\n     * @return {Null}\n     */\n    function _knightClicked(pos, color) {\n      tiles[pos].classList.add('active');\n\n      // up left\n      _moveKnightToBlock(pos, color, -17, true);\n      // up right\n      _moveKnightToBlock(pos, color, -15, true);\n      // right up\n      _moveKnightToBlock(pos, color, -6, true);\n      // right down\n      _moveKnightToBlock(pos, color, 10, true);\n      // down left\n      _moveKnightToBlock(pos, color, 17, true);\n      // down right\n      _moveKnightToBlock(pos, color, 15, true);\n      // left down\n      _moveKnightToBlock(pos, color, 6, true);\n      // left up\n      _moveKnightToBlock(pos, color, -10, true);\n\n      // reds out the board\n      _makeRestInvalid();\n    }\n\n    /**\n     * Shows the possible moves of this pawn\n     *\n     * @param  {Number} pos   :Position of the pawn\n     * @param  {String} color :Color of the pawn\n     * @return {Null}\n     */\n    function _pawnClicked(pos, color) {\n      tiles[pos].classList.add('active');\n\n      if (color === '0') {\n        // down\n        const tileDown = tiles[pos + 8];\n        if (typeof tileDown === 'object' && tileDown.getAttribute('type') === 'empty') {\n          _moveLinearlySingleBlock(pos, color, 8, true);\n\n          const tileDoubleDown = tiles[pos + 16];\n          if (_getPosition(pos).y === 1 &&\n              typeof tileDoubleDown === 'object' &&\n              tileDoubleDown.getAttribute('type') === 'empty') {\n            _moveLinearlySingleBlock(pos, color, 16, true);\n          }\n        }\n\n        const tileDownLeft = tiles[pos + 7];\n        if (typeof tileDownLeft === 'object' && tileDownLeft.getAttribute('type') !== 'empty') {\n          _moveLinearlySingleBlock(pos, color, 7, false);\n        }\n        const tileDownRight = tiles[pos + 9];\n        if (typeof tileDownRight === 'object' && tileDownRight.getAttribute('type') !== 'empty') {\n          _moveLinearlySingleBlock(pos, color, 9, false);\n        }\n      } else {\n        // up\n        const tileUp = tiles[pos - 8];\n        if (typeof tileUp === 'object' && tileUp.getAttribute('type') === 'empty') {\n          _moveLinearlySingleBlock(pos, color, -8, true);\n\n          const tileDoubleUp = tiles[pos - 16];\n          if (_getPosition(pos).y === 6 &&\n              typeof tileDoubleUp === 'object' &&\n              tileDoubleUp.getAttribute('type') === 'empty') {\n            _moveLinearlySingleBlock(pos, color, -16, true);\n          }\n        }\n\n        const tileUpLeft = tiles[pos - 9];\n        if (typeof tileUpLeft === 'object' && tileUpLeft.getAttribute('type') !== 'empty') {\n          _moveLinearlySingleBlock(pos, color, -9, false);\n        }\n        const tileUpRight = tiles[pos - 7];\n        if (typeof tileUpRight === 'object' && tileUpRight.getAttribute('type') !== 'empty') {\n          _moveLinearlySingleBlock(pos, color, -7, false);\n        }\n      }\n\n      // reds out the board\n      _makeRestInvalid();\n    }\n\n    /**\n     * Clears out the contents of a tile\n     *\n     * @param  {Number} index :Position of the tile\n     * @return {Null}\n     */\n    function _clearTile (index) {\n      $(tiles[index])\n      .removeClass()\n      .addClass('tile')\n      .addClass('color-1')\n      .text(' ')\n      .attr('type', 'empty')\n      .attr('color', '1');\n    }\n\n    /**\n     * Transfers the content of one position to another\n     *\n     * @param  {Number} startPos :Transfer from position\n     * @param  {Number} endPos   :Transfer to position\n     * @return {Null}\n     */\n    function _transferTile (startPos, endPos) {\n      const oldTile = tiles[startPos];\n      const newTile = tiles[endPos];\n      const startTileValue = tileValues[startPos];\n      const vals = {\n        type: oldTile.getAttribute('type'),\n        color: oldTile.getAttribute('color')\n      };\n\n      // moves the tile on the board\n      $(newTile)\n        .removeClass()\n        .addClass('tile')\n        .addClass('color-' + vals.color)\n        .addClass(_getTypeClass(vals.type))\n        .addClass(oldTile.classList.contains('rotate') ? 'rotate' : '')\n        .attr('type', vals.type)\n        .attr('color', vals.color);\n\n      _clearTile(startPos);\n\n      // moves the tile in the value array\n      tileValues[endPos] = {\n        color: startTileValue.color,\n        piece: startTileValue.piece\n      };\n      tileValues[startPos] = {\n        color: '0',\n        piece: ''\n      }\n    }\n\n    function _getTypeClass(type) {\n      switch (type) {\n        case 'p':\n          return 'pawn';\n        case 'r':\n          return 'rook';\n        case 'n':\n          return 'knight';\n        case 'b':\n          return 'bishop';\n        case 'q':\n          return 'queen';\n        case 'k':\n          return 'king';\n        default:\n          return ''\n      }\n    }\n\n    /**\n     * Makes a move that has already been verified\n     *\n     * @param  {Number} startPos :Starting position\n     * @param  {Number} endPos   :Ending position\n     * @return {Null}\n     */\n    function _makeVerifiedMove(startPos, endPos) {\n      _transferTile(startPos, endPos);\n      _clearBoard();\n    }\n\n    /**\n     * Pushes a piece move to the server so it can be double checked and then broadcast\n     * to all the users watching the game\n     *\n     * @param  {Number} newPos :New position of the piece\n     * @return {Null}\n     */\n    function _pushPieceMove(newPos) {\n      const startTileValue = tileValues[selectedPos];\n      const startTile = tiles[selectedPos];\n\n      // verifies that the piece the user is moving is actually their piece\n      // not a piece they recolored on the dom\n      if (startTileValue.color === startTile.getAttribute('color') &&\n          startTileValue.piece === startTile.getAttribute('type') ) {\n\n        const payload = {\n          start_position: selectedPos,\n          end_position: newPos,\n          color: startTileValue.color,\n          win: tileValues[newPos].piece === 'k'\n        };\n\n        // if this works properly the server will broadcast the piece move\n        // making listening for an ok useless\n        channel.push('piece_move', payload)\n               .receive('error', resp => {\n                 _pushErrorAlert(resp.reason);\n                 _clearBoard()\n               });\n      } else {\n        console.log('Don\\'t cheat... It is not cool!');\n        _clearBoard()\n      }\n    }\n\n    /**\n     * Change the active player display and sets the active player for use in other functions\n     *\n     * @param {String} player :Player username\n     */\n    function _setActivePlayer(player) {\n      $('.active-player').removeClass('active-player');\n      $('.player > .user-name').each( (index, elem) => {\n        if (elem.innerText.toLowerCase() === player) {\n          elem.classList.add('active-player');\n        }\n      });\n\n      if (window.username === player) {\n        _pushInfoAlert('Your turn!');\n      }\n\n      activePlayer = player;\n    }\n\n    function _pushErrorAlert(message) {\n      _pushAlert('error', message);\n    }\n    function _pushInfoAlert(message) {\n      _pushAlert('info', message);\n    }\n    function _pushAlert(type, message) {\n      const alert = document.createElement('div');\n      const alertContainer = document.getElementById('alerts');\n\n      alert.classList.add('message');\n      alert.classList.add(type);\n      alert.innerText = message;\n\n      alertContainer.appendChild(alert);\n      setTimeout( _ => {\n        alertContainer.removeChild(alert)\n      }, 4000)\n    }\n\n    function _pieceTargeted(type, pos, color) {\n      switch (type) {\n        case 'r':\n          _rookClicked(pos, color);\n          break;\n        case 'n':\n          _knightClicked(pos, color);\n          break;\n        case 'b':\n          _bishopClicked(pos, color);\n          break;\n        case 'q':\n          _queenClicked(pos, color);\n          break;\n        case 'k':\n          _kingClicked(pos, color);\n          break;\n        case 'p':\n          _pawnClicked(pos, color);\n          break;\n        default:\n        // should do nothing by default\n      }\n    }\n\n    function _validateColor(color) {\n      return (color === '0' && window.username === player1) ||\n             (color === '1' && window.username === player2);\n    }\n\n    tiles.on('hover', event => {\n      const target = event.target;\n      const type = target.getAttribute('type');\n      const color = target.getAttribute('color');\n\n      if (boardLocked === false) {\n        const pos = tiles.index(target);\n\n        if (type !== 'empty' && _validateColor(color)) {\n          _clearBoard();\n          if (activePlayer === window.username) {\n            _pieceTargeted(type, pos, color);\n            channel.push('piece_hover', pos);\n          } else {\n            target.classList.add('active');\n          }\n        } else {\n          _clearBoard();\n        }\n      }\n    });\n\n    // click events on tiles and what behavior to do\n    tiles.on('click', (event) => {\n      const target = event.target;\n      const pos = tiles.index(target);\n      const type = target.getAttribute('type');\n      const color = target.getAttribute('color');\n\n      if (activePlayer === window.username) {\n        if ((target.classList.contains('invalid') && type === 'empty') ||\n            (target.classList.contains('active') && boardLocked === true)) {\n          // clearing the board\n           _clearBoard();\n        } else if (target.classList.contains('valid')) {\n          _pushPieceMove(pos);\n        } else if (_validateColor(color)) {\n          if (target.classList.contains('invalid')) {\n            boardLocked = !boardLocked;\n            //\n            _clearBoard();\n          }\n\n          selectedPos = pos;\n          _pieceTargeted(target.getAttribute('type'), pos, color);\n        }\n\n        boardLocked = !boardLocked;\n      }\n    });\n\n    // watches for broadcasts of piece moves from the server and moves the piece\n    channel.on('piece_move', resp => {\n      _clearOppTarget();\n      _makeVerifiedMove(resp.start_position, resp.end_position);\n      _setActivePlayer(resp.new_active_player);\n    });\n\n    channel.on('piece_hover', resp => {\n      _clearOppTarget();\n\n      if (resp.user.username !== window.username) {\n        tiles[resp.position].classList.add('opp-active');\n      }\n    });\n\n    // watches for when the game ends and displays the win/loss flag\n    channel.on('game_over', resp => {\n      console.log('Kappa')\n      if (resp.winner === window.username) {\n        PopUps.winFlag();\n      } else if (resp.loser === window.username) {\n        PopUps.lossFlag();\n      } else {\n        window.location.replace('/');\n      }\n\n      document.onclick = _ => {\n        window.location.replace('/');\n      }\n    });\n\n    // updates the basic game info like usernames and the active player\n    channel.push('get_game_info')\n      .receive('ok', resp => {\n        const player_1 = resp.player_1;\n        const player_2 = resp.player_2;\n\n        if (player_1 === window.username) {\n          $('.chess-board').addClass('rotate');\n          $('.tile').addClass('rotate');\n          $('.player.player-1 > .user-name').text(player_2);\n          $('.player.player-2 > .user-name').text(player_1);\n        } else {\n          $('.player.player-1 > .user-name').text(player_1);\n          $('.player.player-2 > .user-name').text(player_2);\n        }\n\n        player1 = resp.player_1;\n        player2 = resp.player_2;\n        _setActivePlayer(resp.active_player);\n\n        // if there is a game than update the board with previous moves\n        channel.push('update_board')\n          .receive('ok', resp => {\n            resp.moves.forEach(move => {\n              _makeVerifiedMove(move.start_position, move.end_position);\n            });\n          });\n      })\n      .receive('error', _ => {\n        window.location.replace('/');\n      });\n  }\n\n  // public\n  return {\n    /**\n     * Initializes the board\n     *\n     * @param  {Object} socket :socket used to communicate with the server\n     * @param  {String} id     :game id\n     * @return {Null}\n     */\n    init: (socket, id) => {\n      const chessBoard = $('.chess-board');\n      const tiles = chessBoard.find('.tile');\n\n      channel = socket.channel('games:' + id);\n      channel.join()\n        .receive('ok', _ => {\n          _initTiles(chessBoard.find('.tile'));\n        })\n        .receive('error', reason => console.log('join failed', reason) );\n    },\n    /**\n     * Creates a new game id and passes it into a callback before redirect\n     * @param {Object} beforeRedirect :What needs to be done before redirect\n     */\n    newGame: beforeRedirect => {\n      const id = Utils.guid();\n      beforeRedirect(id);\n\n      window.location.replace('/game?=' + id);\n    },\n    /**\n     * Redirects a user to the game\n     * @param {String} id :ID of the game\n     */\n    enterGame: id => {\n      window.location.replace('/game?=' + id);\n    }\n  }\n\n})();\n\nexport default board;\n","// defines the popups used throughout the app\n\nconst popUps = {\n  startGame: onJoin => {\n    const popUp = document.createElement('div');\n    const body = document.body;\n\n    function closePopUp () {\n      body.removeChild(popUp);\n    }\n\n    popUp.className = 'pop-up game-start';\n    popUp.innerHTML = `\n      <div class=\"title\">Join Game</div>\n      <div class=\"options\">\n        <div class=\"btn join\">Join</div>\n        <div class=\"btn cancel\">Cancel</div>\n      </div>`;\n\n    popUp.getElementsByClassName('join')[0].onclick = () => {\n      closePopUp();\n      if (typeof onJoin === 'function') {\n        onJoin();\n      }\n    }\n\n    popUp.getElementsByClassName('cancel')[0].onclick = closePopUp;\n\n    document.body.appendChild(popUp);\n  },\n  offerGame: onOffer => {\n    const popUp = document.createElement('div');\n    const body = document.body;\n\n    function closePopUp () {\n      body.removeChild(popUp);\n    }\n\n    popUp.className = 'pop-up game-start';\n    popUp.innerHTML = `\n      <div class=\"title\">Join Game</div>\n      <div class=\"mdl-textfield\">\n        <label class=\"mdl-textfield__label\" for=\"username_input\">Password</label>\n        <input class=\"mdl-textfield__input input\" id=\"username_input\" type=\"text\">\n      </div>\n      <div class=\"btn offer\">Offer Game</div>`;\n\n    popUp.getElementsByClassName('offer')[0].onclick = _ => {\n      const inputValue = popUp.getElementsByClassName('input')[0].value;\n      closePopUp();\n\n      if (typeof onOffer === 'function') {\n        onOffer(inputValue);\n      }\n    }\n\n    document.body.appendChild(popUp);\n  },\n  winFlag: params => {\n    const popUp = document.createElement('div');\n    const body = document.body;\n\n    popUp.className = 'win-flag';\n    popUp.innerHTML = `\n      <div class=\"title\">WIN</div>\n      <div class=\"content\">\n        <div class=\"prev-elo\">\n          Prev Elo: 69\n        </div>\n        <div class=\"new-elo\">\n          New Elo: 1337\n        </div>\n      </div>`;\n\n    document.body.appendChild(popUp);\n  },\n  lossFlag: params => {\n    const popUp = document.createElement('div');\n    const body = document.body;\n\n    popUp.className = 'loss-flag';\n    popUp.innerHTML = `\n      <div class=\"title\">LOSS</div>\n      <div class=\"content\">\n        <div class=\"prev-elo\">\n          Prev Elo: 69\n        </div>\n        <div class=\"new-elo\">\n          New Elo: 1337\n        </div>\n      </div>`;\n\n    document.body.appendChild(popUp);\n  }\n}\n\nexport default popUps;\n","import PopUps from './pop_ups';\nimport Board from './board';\n\nconst User = (() => {\n  function initChannelEvents (socket, channel) {\n    let userInfo = null;\n\n    channel.on(\"offer_game\", resp => {\n      const username = resp.to.username;\n\n      if (username === userInfo.username) {\n        PopUps.startGame(() => {\n          // fire code to enter a game for the current user\n          Board.newGame(id => {\n            const payload = {\n              to: resp.from.username,\n              game_id: id\n            }\n            channel.push(\"start_game\", payload);\n          });\n        });\n      }\n    });\n\n    channel.on(\"start_game\", resp => {\n      if (userInfo !== null && resp.to.username === userInfo.username) {\n        Board.enterGame(resp.game_id);\n      }\n    });\n\n    channel.on(\"user_info\", resp => {\n      userInfo = resp;\n    });\n  }\n\n  return {\n    init: socket => {\n      const userChannel = socket.channel(\"users:all\");\n\n      userChannel.join()\n        .receive(\"ok\", resp => console.log(\"joined the game channel\", resp))\n        .receive(\"error\", reason => console.log(\"join failed\", reason));\n\n      initChannelEvents(socket, userChannel);\n      userChannel.push(\"get_user_info\");\n\n\n      $('#offer_game').on('click', _ => {\n        PopUps.offerGame(target => {\n          userChannel.push(\"offer_game\", target);\n        });\n      });\n    }\n  }\n})()\n\nexport default User;\n","const utils = {\n  guid: () => {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n      s4() + '-' + s4() + s4() + s4();\n  }\n}\n\nexport default utils;\n","// NOTE: The contents of this file will only be executed if\n// you uncomment its entry in \"web/static/js/app.js\".\n\n// To use Phoenix channels, the first step is to import Socket\n// and connect at the socket path in \"lib/my_app/endpoint.ex\":\nimport {Socket} from \"phoenix\"\n\nlet socket = new Socket(\"/socket\", {\n  params: {token: window.userToken},\n  logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n});\n\n// When you connect, you'll often need to authenticate the client.\n// For example, imagine you have an authentication plug, `MyAuth`,\n// which authenticates the session and assigns a `:current_user`.\n// If the current user exists you can assign the user's token in\n// the connection for use in the layout.\n//\n// In your \"web/router.ex\":\n//\n//     pipeline :browser do\n//       ...\n//       plug MyAuth\n//       plug :put_user_token\n//     end\n//\n//     defp put_user_token(conn, _) do\n//       if current_user = conn.assigns[:current_user] do\n//         token = Phoenix.Token.sign(conn, \"user socket\", current_user.id)\n//         assign(conn, :user_token, token)\n//       else\n//         conn\n//       end\n//     end\n//\n// Now you need to pass this token to JavaScript. You can do so\n// inside a script tag in \"web/templates/layout/app.html.eex\":\n//\n//     <script>window.userToken = \"<%= assigns[:user_token] %>\";</script>\n//\n// You will need to verify the user token in the \"connect/2\" function\n// in \"web/channels/user_socket.ex\":\n//\n//     def connect(%{\"token\" => token}, socket) do\n//       # max_age: 1209600 is equivalent to two weeks in seconds\n//       case Phoenix.Token.verify(socket, \"user socket\", token, max_age: 1209600) do\n//         {:ok, user_id} ->\n//           {:ok, assign(socket, :user, user_id)}\n//         {:error, reason} ->\n//           :error\n//       end\n//     end\n//\n// Finally, pass the token on connect as below. Or remove it\n// from connect if you don't care about authentication.\n\nexport default socket\n"]}